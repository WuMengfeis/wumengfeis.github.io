<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>努力吧，未来是你的</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-06T13:39:08.437Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wumengfei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL学习笔记</title>
    <link href="http://yoursite.com/2019/05/06/SQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/05/06/SQL学习笔记/</id>
    <published>2019-05-06T10:59:04.000Z</published>
    <updated>2019-05-06T13:39:08.437Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SQL基础用法"><a href="#SQL基础用法" class="headerlink" title="SQL基础用法"></a>SQL基础用法</h3><p>1、数据库以及数据表的创建<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create database  数据库名称  //数据库的创建</span><br><span class="line">create table 表名称  //数据表的创建</span><br><span class="line">(</span><br><span class="line">列名称1 数据类型,</span><br><span class="line">列名称2 数据类型,</span><br><span class="line">列名称3 数据类型,</span><br><span class="line">....</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>integer(size)<br>int(size)<br>smallint(size)<br>tinyint(size)</td><td>仅容纳整数。在括号内规定数字的最大位数。</td></tr><tr><td>decimal(size,d)<br>numeric(size,d)</td><td>容纳带有小数的数字。<br>“size”规定数字的最大位数。”d” 规定小数点右侧的最大位数。</td></tr><tr><td>char(size)</td><td>容纳固定长度的字符串（可容纳字母、数字以及特殊字符）。<br>在括号中规定字符串的长度。</td></tr><tr><td>varchar(size)</td><td>容纳可变长度的字符串（可容纳字母、数字以及特殊的字符）。<br>在括号中规定字符串的最大长度。</td></tr><tr><td>date(yyyymmdd)</td><td>容纳日期。</td></tr></tbody></table><p>persons表</p><table><thead><tr><th>id</th><th>Lastname</th><th>FirstName</th><th>Address</th><th>City</th></tr></thead><tbody><tr><td>1</td><td>Adams</td><td>John</td><td>Oxford Street</td><td>London</td></tr><tr><td>2</td><td>Bush</td><td>George</td><td>Fifth Avenue</td><td>New York</td></tr><tr><td>3</td><td>Carter</td><td>Thomas</td><td>Changan Street</td><td>Beijing</td></tr><tr><td>4</td><td>Obama</td><td>Barack</td><td>Pennsylvania Avenue</td><td>Washington</td></tr></tbody></table><p><strong>下列所有例子都使用上面的表</strong></p><p>2、SQL select用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select LastName,FirstName from Persons</span><br><span class="line">或者</span><br><span class="line">select * from persons</span><br></pre></td></tr></table></figure></p><p><strong>注释</strong>:SQL语句对大小写不敏感</p><p>3、SQL distinct用法</p><p>在表中，可能会包含重复值。这并不成问题，不过，有时您也许希望仅仅列出不同（distinct）的值。关键词 distinct 用于返回唯一不同的值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct LastName from persons</span><br></pre></td></tr></table></figure></p><p>4、SQL where用法</p><p>如需有条件地从表中选取数据，可将 where 子句添加到 select 语句。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select LastName from persons where City=&apos;Beijing&apos;</span><br></pre></td></tr></table></figure></p><p>5、SQL and和or运算符用法</p><p>AND 和 OR 可在 WHERE 子语句中把两个或多个条件结合起来。</p><p>如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。</p><p>如果第一个条件和第二个条件中只要有一个成立，则 OR 运算符显示一条记录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">and的使用</span><br><span class="line">select * from persons where FirstName=&apos;Thomas&apos; and LastName=&apos;Carter&apos;</span><br><span class="line">or的使用</span><br><span class="line">select * from persons where FirstName=&apos;Thomas&apos; or LastName=&apos;Carter&apos;</span><br><span class="line">结合二者使用</span><br><span class="line">select * from persons where (FirstName=&apos;Thomas&apos; or FirstName=&apos;William&apos;)</span><br><span class="line">and LastName=&apos;Carter&apos;</span><br></pre></td></tr></table></figure></p><p>6、SQL order by 用法</p><p><strong>ORDER BY 语句</strong></p><p>ORDER BY 语句用于根据指定的列对结果集进行排序。</p><p>ORDER BY 语句默认按照升序对记录进行排序。</p><p>如果您希望按照降序对记录进行排序，可以使用 DESC 关键字。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select LastName,FirstName from persons order by LastName</span><br><span class="line">降序排列</span><br><span class="line">select LastName,FirstName from persons order by LastName desc</span><br></pre></td></tr></table></figure></p><p>7、SQL insert into用法</p><p>INSERT INTO 语句用于向表格中插入新的行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into persons values (5,&apos;Gates&apos;, &apos;Bill&apos;, &apos;Xuanwumen 10&apos;, &apos;Beijing&apos;)</span><br><span class="line"></span><br><span class="line">在指定的列中插入数据</span><br><span class="line">insert into persons (LastName, Address) values (&apos;Wilson&apos;, &apos;Champs-Elysees&apos;)</span><br></pre></td></tr></table></figure></p><p>8、SQL update用法</p><p>Update 语句用于修改表中的数据。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">更新某一列中的一个列</span><br><span class="line">update persons set FirstName = &apos;Fred&apos; where LastName = &apos;Wilson&apos; </span><br><span class="line">更新某一行中的若干列</span><br><span class="line">update persons set Address = &apos;Zhongshan 23&apos;, City = &apos;Nanjing&apos;</span><br><span class="line">where LastName = &apos;Wilson&apos;</span><br></pre></td></tr></table></figure></p><p>9、SQL delete用法</p><p>DELETE 语句用于删除表中的行。</p><p>删除某一行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from persons where LastName = &apos;Wilson&apos;</span><br></pre></td></tr></table></figure></p><p>删除所有行<br>可以在不删除表的情况下删除所有的行。这意味着表的结构、属性和索引都是完整的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">delete from persons</span><br><span class="line">或</span><br><span class="line">delete * from persons</span><br></pre></td></tr></table></figure></p><h3 id="SQL快速参考"><a href="#SQL快速参考" class="headerlink" title="SQL快速参考"></a>SQL快速参考</h3><table><thead><tr><th style="text-align:left">语句</th><th style="text-align:left">语法</th></tr></thead><tbody><tr><td style="text-align:left">and / or</td><td style="text-align:left">select column_name(s)<br>from table_name<br>where condition<br>and \</td><td>or condition</td></tr><tr><td style="text-align:left">alter table (add column)</td><td style="text-align:left">alter table table_name <br>add column_name datatype</td></tr><tr><td style="text-align:left">alter table (drop column)</td><td style="text-align:left">alter table table_name <br>drop column column_name</td></tr><tr><td style="text-align:left">as (alias for column)</td><td style="text-align:left">select column_name as column_alias<br>from table_name</td></tr><tr><td style="text-align:left">as (alias for table)</td><td style="text-align:left">select column_name<br>from table_name  as table_alias</td></tr><tr><td style="text-align:left">between</td><td style="text-align:left">select column_name(s)<br>from table_name<br>where column_name<br>between value1 and value2</td></tr><tr><td style="text-align:left">create database</td><td style="text-align:left">create database database_name</td></tr><tr><td style="text-align:left">create index</td><td style="text-align:left">create index index_name<br>on table_name (column_name)</td></tr><tr><td style="text-align:left">create table</td><td style="text-align:left">create table table_name<br>(<br>column_name1 data_type,<br>column_name2 data_type,<br>…….<br>)</td></tr><tr><td style="text-align:left">create unique index</td><td style="text-align:left">create unique index index_name<br>on table_name (column_name)</td></tr><tr><td style="text-align:left">create view</td><td style="text-align:left">create view view_name as<br>select column_name(s)<br>from table_name<br>where condition</td></tr><tr><td style="text-align:left">delete from</td><td style="text-align:left">delete from table_name <br>(Note: Deletes the entire table!!)<br>or<br>delete from table_name<br>where condition</td></tr><tr><td style="text-align:left">drop database</td><td style="text-align:left">drop database database_name</td></tr><tr><td style="text-align:left">drop index</td><td style="text-align:left">drop index table_name.index_name</td></tr><tr><td style="text-align:left">drop table</td><td style="text-align:left">deop table table_name</td></tr><tr><td style="text-align:left">group by</td><td style="text-align:left">select column_name1,sum(column_name2)<br>from table_name<br>group by<br>column_name1</td></tr><tr><td style="text-align:left">having</td><td style="text-align:left">select column_name1,sum(column_name2)<br>from table_name<br>group by<br>column_name1<br>having sum(column_name2) condition value</td></tr><tr><td style="text-align:left">in</td><td style="text-align:left">select column_name(s)<br>from table_name<br>where column_name<br>in (value1,value2,..)</td></tr><tr><td style="text-align:left">insert into</td><td style="text-align:left">insert into table_name<br>values (value1, value2,….)<br>or<br>insert into table_name<br>(column_name1, column_name2,…)<br>values (value1, value2,….)</td></tr><tr><td style="text-align:left">like</td><td style="text-align:left">select column_name(s)<br>from table_name<br>where column_name<br>like pattern</td></tr><tr><td style="text-align:left">order by</td><td style="text-align:left">select column_name(s)<br>from table_name<br>order by column_name<br>[ASC\</td><td>DESC]</td></tr><tr><td style="text-align:left">select</td><td style="text-align:left">select column_name(s)<br>from table_name</td></tr><tr><td style="text-align:left">select *</td><td style="text-align:left">select * from table_name</td></tr><tr><td style="text-align:left">select distinct</td><td style="text-align:left">select distinct column_name(s)<br>from table_name</td></tr><tr><td style="text-align:left">select into<br>(used to create backup copies of tables)</td><td style="text-align:left">select * into<br>new_table_name<br>from original_table_name<br>or<br>select column_name(s)<br>into new_table_name<br>from original_table_name</td></tr><tr><td style="text-align:left">truncate table<br>(deletes only the data inside the table)</td><td style="text-align:left">truncate table<br>table_name</td></tr><tr><td style="text-align:left">update</td><td style="text-align:left">update table_name<br>set column_name=new_value<br>[, column_name=new_value]<br>where column_name=some_value</td></tr><tr><td style="text-align:left">where</td><td style="text-align:left">select column_name(s)<br>from table_name<br>where condition</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;SQL基础用法&quot;&gt;&lt;a href=&quot;#SQL基础用法&quot; class=&quot;headerlink&quot; title=&quot;SQL基础用法&quot;&gt;&lt;/a&gt;SQL基础用法&lt;/h3&gt;&lt;p&gt;1、数据库以及数据表的创建&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>配置双python环境</title>
    <link href="http://yoursite.com/2019/03/29/%E9%85%8D%E7%BD%AE%E5%8F%8Cpython%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/03/29/配置双python环境/</id>
    <published>2019-03-29T12:51:53.000Z</published>
    <updated>2019-03-29T12:52:26.987Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置双Python环境："><a href="#配置双Python环境：" class="headerlink" title="配置双Python环境："></a>配置双Python环境：</h1><ul><li>首先查看Python目录：whereis  Python</li><li>然后删除Python2：rm -rf python</li><li>创建Python3链接到原python2的目录上：ln -s /usr/bin/python3 /usr/bin/python</li><li>然后运行python2和python3：python和python2</li><li>最后装上pip2和pip3：sudo apt-get install python3-pip python-pip</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;配置双Python环境：&quot;&gt;&lt;a href=&quot;#配置双Python环境：&quot; class=&quot;headerlink&quot; title=&quot;配置双Python环境：&quot;&gt;&lt;/a&gt;配置双Python环境：&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;首先查看Python目录：whereis  Py
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Qt入门</title>
    <link href="http://yoursite.com/2019/03/29/Qt%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2019/03/29/Qt入门/</id>
    <published>2019-03-29T12:36:31.000Z</published>
    <updated>2019-03-29T14:33:09.005Z</updated>
    
    <content type="html"><![CDATA[<h4 id="标准对话框"><a href="#标准对话框" class="headerlink" title="标准对话框"></a>标准对话框</h4><p>这些标准对话框全部继承至QDialog类，并增加了自己的特色功能</p><h5 id="颜色对话框（QColorDialog）"><a href="#颜色对话框（QColorDialog）" class="headerlink" title="颜色对话框（QColorDialog）"></a>颜色对话框（QColorDialog）</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QColor color = QColorDialog::getColor(Qt::red,<span class="keyword">this</span>,tr(<span class="string">"颜色对话框"</span>),QColorDialog::ShowAlphaChannel);</span><br></pre></td></tr></table></figure><p>获取颜色静态函数getColor(),它的3个参数的作用分别是：设置初始颜色、指定父窗口和设置对话框标题</p><h5 id="文件对话框-QFileDialog"><a href="#文件对话框-QFileDialog" class="headerlink" title="文件对话框(QFileDialog)"></a>文件对话框(QFileDialog)</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">QStringList fileName = QFileDialog::getOpenFileName(<span class="keyword">this</span>, tr(<span class="string">"文件对话框"</span>),</span><br><span class="line">                                 <span class="string">"D:"</span>, tr(<span class="string">"图片文件(*png *jpg));</span></span><br><span class="line"><span class="string">```  </span></span><br><span class="line"><span class="string">其四个参数的作用分别是：指定父窗口、设置对话框标题、指定默认打开的目录路径和设置文件类型过滤器，如果不指定文件过滤器，则默认选择所有类型的文件，这里指定了只选择png和jpg两种格式的图片文件（注意，代码中*png和*jpg之间需要一个空格）</span></span><br><span class="line"><span class="string">```c++</span></span><br><span class="line"><span class="string">QStringList fileName = QFileDialog::getOpenFileName(this, tr("</span>文件对话框<span class="string">"),</span></span><br><span class="line"><span class="string">                                 "</span>D:<span class="string">", tr("</span>图片文件(*png *jpg);;文本文件(*txt)<span class="string">"));</span></span><br></pre></td></tr></table></figure><p>这里的文件类型就是“文本文件”，但是使用getOpenFileName只能选择单个文件<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QStringList fileNames = QFileDialog::getOpenFileNames(<span class="keyword">this</span>, tr(<span class="string">"文件对话框"</span>),</span><br><span class="line">                                 <span class="string">"D:"</span>, tr(<span class="string">"图片文件(*png *jpg);;文本文件(*txt)"</span>));</span><br></pre></td></tr></table></figure></p><p>这里使用的是getOpenFileNames，可以选择多个文件</p><hr><p>QFileDialog类还提供了getSaveFileName()函数来实现保存文件对话框和文件另存为对话框，还有getExistingDirectory()函数来获取一个已存在的文件夹路径。</p><hr><h5 id="字体对话框-QFontDialog"><a href="#字体对话框-QFontDialog" class="headerlink" title="字体对话框(QFontDialog)"></a>字体对话框(QFontDialog)</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QFont font = QFontDialog::getFont(&amp;ok, <span class="keyword">this</span>);</span><br></pre></td></tr></table></figure><p>getFont()静态函数获取选择的字体，第一个参数是bool类型变量，用来存放按下的按钮状态，比如在打开的字体对话框中单击了OK按钮，那么这里的ok就为true，这样来告诉程序已经选择了字体。</p><h5 id="输入对话框-QInputDialog"><a href="#输入对话框-QInputDialog" class="headerlink" title="输入对话框(QInputDialog)"></a>输入对话框(QInputDialog)</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> ok;</span><br><span class="line"><span class="comment">// 获取字符串</span></span><br><span class="line">QString <span class="built_in">string</span> = QInputDialog::getText(<span class="keyword">this</span>, tr(<span class="string">"输入字符串对话框"</span>),</span><br><span class="line">                                       tr(<span class="string">"请输入用户名："</span>), QLineEdit::Normal,tr(<span class="string">"admin"</span>), &amp;ok);</span><br><span class="line"><span class="keyword">if</span>(ok) qDebug() &lt;&lt; <span class="string">"string:"</span> &lt;&lt; <span class="built_in">string</span>;</span><br><span class="line"><span class="comment">// 获取整数</span></span><br><span class="line"><span class="keyword">int</span> value1 = QInputDialog::getInt(<span class="keyword">this</span>, tr(<span class="string">"输入整数对话框"</span>),</span><br><span class="line">                                  tr(<span class="string">"请输入-1000到1000之间的数值"</span>), <span class="number">100</span>, <span class="number">-1000</span>, <span class="number">1000</span>, <span class="number">10</span>, &amp;ok);</span><br><span class="line"><span class="keyword">if</span>(ok) qDebug() &lt;&lt; <span class="string">"value1:"</span> &lt;&lt; value1;</span><br><span class="line"><span class="comment">// 获取浮点数</span></span><br><span class="line"><span class="keyword">double</span> value2 = QInputDialog::getDouble(<span class="keyword">this</span>, tr(<span class="string">"输入浮点数对话框"</span>),</span><br><span class="line">                                        tr(<span class="string">"请输入-1000到1000之间的数值"</span>), <span class="number">0.00</span>, <span class="number">-1000</span>, <span class="number">1000</span>, <span class="number">2</span>, &amp;ok);</span><br><span class="line"><span class="keyword">if</span>(ok) qDebug() &lt;&lt; <span class="string">"value2:"</span> &lt;&lt; value2;</span><br><span class="line">QStringList items;</span><br><span class="line">items &lt;&lt; tr(<span class="string">"条目1"</span>) &lt;&lt; tr(<span class="string">"条目2"</span>);</span><br><span class="line"><span class="comment">// 获取条目</span></span><br><span class="line">QString item = QInputDialog::getItem(<span class="keyword">this</span>, tr(<span class="string">"输入条目对话框"</span>),</span><br><span class="line">                                     tr(<span class="string">"请选择或输入一个条目"</span>), items, <span class="number">0</span>, <span class="literal">true</span>, &amp;ok);</span><br><span class="line"><span class="keyword">if</span>(ok) qDebug() &lt;&lt; <span class="string">"item:"</span> &lt;&lt; item;</span><br></pre></td></tr></table></figure><p>这里一共创建了4个不同类型的输人对话框。getText()函数可以提供一个可输入字符串的对话框，各参数的作用分别是:指定父窗口、设置窗口标题、设置对话框中的标签显示文本、设置输人字符串的显示模式(例如密码可以显示成小黑点,这里选择了显示用户输人的实际内容)、设置输人框中的默认字符串和设置获取按下按钮信息的bool变量;getInt()函数可以提供一个输入整型数值的对话框,其中的参数100表示默认的数值是100,-1000表示可输人的最小值是-1000,1000表示可输人的最大值是1000,10表示使用箭头按钮,数值每次变化10;getDouble()函数可以提供一个输入浮点型数值的对话框,其中的参数2表示小数的位数为2;getItem()函数提供一个可以输人一个条目的对话框,需要先给它提供一些条目,例如这里定义的QStringList类型的items,其中参数0表示默认显示列表中的第0个条目(0就是第一个),参数true设置条目是否可以被更改,true就是可以被更改。这里使用了静态函数,不过也可以自己定义对象，然后使用相关的函数进行设置。</p><h5 id="消息对话框-QMessageBox"><a href="#消息对话框-QMessageBox" class="headerlink" title="消息对话框(QMessageBox)"></a>消息对话框(QMessageBox)</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 问题对话框</span></span><br><span class="line">   <span class="keyword">int</span> ret1 = QMessageBox::question(<span class="keyword">this</span>, tr(<span class="string">"问题对话框"</span>),</span><br><span class="line">                                    tr(<span class="string">"你了解Qt吗？"</span>), QMessageBox::Yes, QMessageBox::No);</span><br><span class="line">   <span class="keyword">if</span>(ret1 == QMessageBox::Yes) qDebug() &lt;&lt; tr(<span class="string">"Yes问题！"</span>);</span><br><span class="line">   <span class="keyword">else</span> qDebug()&lt;&lt;tr(<span class="string">"No问题！"</span>);</span><br><span class="line">   <span class="comment">// 提示对话框</span></span><br><span class="line">   <span class="keyword">int</span> ret2 = QMessageBox::information(<span class="keyword">this</span>, tr(<span class="string">"提示对话框"</span>),</span><br><span class="line">                                       tr(<span class="string">"这是Qt书籍！"</span>), QMessageBox::Ok);</span><br><span class="line">   <span class="keyword">if</span>(ret2 == QMessageBox::Ok) qDebug() &lt;&lt; tr(<span class="string">"提示！"</span>);</span><br><span class="line">   <span class="comment">// 警告对话框</span></span><br><span class="line">   <span class="keyword">int</span> ret3 = QMessageBox::warning(<span class="keyword">this</span>, tr(<span class="string">"警告对话框"</span>),</span><br><span class="line">                                   tr(<span class="string">"不能提前结束！"</span>), QMessageBox::Abort);</span><br><span class="line">   <span class="keyword">if</span>(ret3 == QMessageBox::Abort) qDebug() &lt;&lt; tr(<span class="string">"警告！"</span>);</span><br><span class="line">   <span class="comment">// 错误对话框</span></span><br><span class="line">   <span class="keyword">int</span> ret4 = QMessageBox::critical(<span class="keyword">this</span>, tr(<span class="string">"严重错误对话框"</span>),</span><br><span class="line">                                    tr(<span class="string">"发现一个严重错误！现在要关闭所有文件！"</span>), QMessageBox::YesAll);</span><br><span class="line">   <span class="keyword">if</span>(ret4 == QMessageBox::YesAll) qDebug() &lt;&lt; tr(<span class="string">"错误"</span>);</span><br><span class="line">   <span class="comment">// 关于对话框</span></span><br><span class="line">   QMessageBox::about(<span class="keyword">this</span>, tr(<span class="string">"关于对话框"</span>),</span><br><span class="line">                      tr(<span class="string">"yafeilinux致力于Qt及Qt Creator的普及工作！"</span>));</span><br></pre></td></tr></table></figure><p>这里创建了4个不同类型的消息对话框，分别拥有不同的图标还有提示音（这个是操作系统设置的），几个参数分别用于设置父窗口、标题栏、显示信息和拥有的按钮</p><h5 id="进度对话框-QProgressDialog"><a href="#进度对话框-QProgressDialog" class="headerlink" title="进度对话框(QProgressDialog)"></a>进度对话框(QProgressDialog)</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QProgressDialog <span class="title">dialog</span><span class="params">(tr(<span class="string">"文件复制进度"</span>), tr(<span class="string">"取消"</span>), <span class="number">0</span>, <span class="number">50000</span>, <span class="keyword">this</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>这里的参数分别用于设置对话框的标签内容、取消按钮的显示文本、最小值、最大值和父窗口</p><h5 id="错误信息对话框-QErrorMessage"><a href="#错误信息对话框-QErrorMessage" class="headerlink" title="错误信息对话框(QErrorMessage)"></a>错误信息对话框(QErrorMessage)</h5><p>首先定义一个QErrorMessage对象errordlg<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">errordlg = <span class="keyword">new</span> QErrorMessage(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure></p><p>然后使用QErrorMessage里面的showWindowTitle()函数来显示对话框<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">errordlg-&gt;setWindowTitle(tr(<span class="string">"错误信息对话框"</span>));</span><br><span class="line">errordlg-&gt;showMessage(tr(<span class="string">"这里是出错信息！"</span>));</span><br></pre></td></tr></table></figure></p><h5 id="向导对话框-QWizard"><a href="#向导对话框-QWizard" class="headerlink" title="向导对话框(QWizard)"></a>向导对话框(QWizard)</h5><p>首先定义3个向导页面<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">QWizardPage * MyWidget::createPage1()  <span class="comment">// 向导页面1</span></span><br><span class="line">&#123;</span><br><span class="line">    QWizardPage *page = <span class="keyword">new</span> QWizardPage;</span><br><span class="line">    page-&gt;setTitle(tr(<span class="string">"介绍"</span>));</span><br><span class="line">    <span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line">QWizardPage * MyWidget::createPage2()  <span class="comment">// 向导页面2</span></span><br><span class="line">&#123;</span><br><span class="line">    QWizardPage *page = <span class="keyword">new</span> QWizardPage;</span><br><span class="line">    page-&gt;setTitle(tr(<span class="string">"用户选择信息"</span>));</span><br><span class="line">    <span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line">QWizardPage * MyWidget::createPage3()  <span class="comment">// 向导页面3</span></span><br><span class="line">&#123;</span><br><span class="line">    QWizardPage *page = <span class="keyword">new</span> QWizardPage;</span><br><span class="line">    page-&gt;setTitle(tr(<span class="string">"结束"</span>));</span><br><span class="line">    <span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后设置页面标题<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QWizard <span class="title">wizard</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">wizard.setWindowTitle(tr(<span class="string">"向导对话框"</span>));</span><br><span class="line">wizard.addPage(createPage1());     <span class="comment">// 添加向导页面</span></span><br><span class="line">wizard.addPage(createPage2());</span><br><span class="line">wizard.addPage(createPage3());</span><br><span class="line">wizard.exec();</span><br></pre></td></tr></table></figure></p><p>这里的添加向导页面的顺序和向导页面出现的顺序是一致的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;标准对话框&quot;&gt;&lt;a href=&quot;#标准对话框&quot; class=&quot;headerlink&quot; title=&quot;标准对话框&quot;&gt;&lt;/a&gt;标准对话框&lt;/h4&gt;&lt;p&gt;这些标准对话框全部继承至QDialog类，并增加了自己的特色功能&lt;/p&gt;
&lt;h5 id=&quot;颜色对话框（QColorD
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git笔记</title>
    <link href="http://yoursite.com/2018/11/02/git%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/11/02/git笔记/</id>
    <published>2018-11-02T11:10:35.000Z</published>
    <updated>2018-11-02T11:11:24.227Z</updated>
    
    <content type="html"><![CDATA[<h3 id="有网的时候："><a href="#有网的时候：" class="headerlink" title="有网的时候："></a>有网的时候：</h3><p>1、建立一个远程仓库</p><p>2、将远程仓库克隆到本地（git clone 网址）//shift+insert 复制</p><p>3、git config –list //查看配置</p><p>4、git config –(加入自己的邮箱和名字)</p><p>5、在本地仓库中增添内容</p><p>6、git status //查看状态<br>   //git config –global core.quotepath false 解决中文问题</p><p>7、将工作区的内容添加到到暂存区<br>  （1、git add .//将全部文件添加到暂存区 2、git add 文件名//将指定的文件添加到暂存区）</p><p>8、git status //查看状态</p><p>9、将暂存区的内容提交到远程仓库（git commit -m “提交说明”）</p><p>10、git log  查看状态<br>或者 git log –oneline 将查看的状态显示在一行</p><p>11、git remote -v 查看远程信息</p><p>12、将本地仓库的内容推送到远程仓库 （git push origin master）</p><hr><h3 id="没网的时候："><a href="#没网的时候：" class="headerlink" title="没网的时候："></a>没网的时候：</h3><p>1、在本地初始化仓库（git init）</p><p>2、参考上面的步骤（2—10步）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;有网的时候：&quot;&gt;&lt;a href=&quot;#有网的时候：&quot; class=&quot;headerlink&quot; title=&quot;有网的时候：&quot;&gt;&lt;/a&gt;有网的时候：&lt;/h3&gt;&lt;p&gt;1、建立一个远程仓库&lt;/p&gt;
&lt;p&gt;2、将远程仓库克隆到本地（git clone 网址）//shift+in
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在linux上使用git上传文件到码云上</title>
    <link href="http://yoursite.com/2018/11/02/%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8git%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E7%A0%81%E4%BA%91%E4%B8%8A/"/>
    <id>http://yoursite.com/2018/11/02/在linux上使用git上传文件到码云上/</id>
    <published>2018-11-02T10:54:16.000Z</published>
    <updated>2019-03-29T12:13:18.304Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在linux上使用git上传文件到码云上"><a href="#在linux上使用git上传文件到码云上" class="headerlink" title="在linux上使用git上传文件到码云上"></a>在linux上使用git上传文件到码云上</h1><p><a href="https://blog.csdn.net/lhj_168/article/details/60576098" target="_blank" rel="noopener">https://blog.csdn.net/lhj_168/article/details/60576098</a></p><p>1.首先安装git：sudo apt-get install git </p><p>2.添加ssh公钥到码云：<a href="http://git.mydoc.io/?t=154712" target="_blank" rel="noopener">http://git.mydoc.io/?t=154712</a></p><ul><li>ssh-keygen -t rsa -C “<a href="mailto:youremail@example.com" target="_blank" rel="noopener">youremail@example.com</a>“       </li><li>#在linux终端执行该命令，然后三次回车，生成ssh公钥</li><li>cat ~/.ssh/id_rsa.pub     #查看生成的ssh公钥</li><li>添加后，在终端（Terminal）中输入：ssh -T <a href="mailto:git@gitee.com" target="_blank" rel="noopener">git@gitee.com</a></li><li>若返回：Welcome to Gitee.com, yourname!  则添加成功</li></ul><p>3.在码云上建立一个仓库：假设名称为MyProject</p><p>4.在linux上建立一个目录（最好与远程同名）：<br>mkdir MyProject<br>cd MyProject</p><p>5.初始化git：git init</p><p>6.将要上传的的文件复制到此目录：cp</p><p>7.git remote add origin ssh链接               //设置码云上对应项目的ssh链接,origin为链接名称,可自定义<br>//若要删除可用命令:  git remote rm origin<br>git pull –rebase origin master             //取回项目的master分支,并与本地的合并,若不合并push会失败<br>git push origin master                      //推送master分支到码云上，登录码云即可看见刚推送的项目了</p><p>8.再此目录上可以写一个自动上传的脚本：vim push.sh<br>(#!/bin/sh<br>git add .<br>git commit -m “Summer_task”<br>git push origin master)<br>如果没有脚本就手动输入以上内容</p><p>9.运行脚本：bash push.sh<br>如果出现以下错误</p><blockquote><p>*** 请告诉我你是谁。</p></blockquote><blockquote><p>运行</p></blockquote><blockquote><p>git config –global user.email “<a href="mailto:you@example.com" target="_blank" rel="noopener">you@example.com</a>“<br>git config –global user.name “Your Name”</p></blockquote><blockquote><p>来设置您账号的缺省身份标识。<br>如果仅在本仓库设置身份标识，则省略 –global 参数。<br>fatal: unable to auto-detect email address (got ‘root@debian.(none)’)<br>error: src refspec master does not match any.<br>error: 无法推送一些引用到 <a href="mailto:&#39;git@gitee.com" target="_blank" rel="noopener">&#39;git@gitee.com</a>:wumengfei666/Task_Summer.git’</p></blockquote><p>则运行以下命令<br>git config –global user.name “yourname”                              #设定自定义的昵称<br>git config –global user.user.email  “<a href="mailto:youremail@example.com" target="_blank" rel="noopener">youremail@example.com</a>“          #设定自己的邮箱</p><p>9.然后再执行脚本<br>如果出现以下错误</p><blockquote><p>fatal: 当前分支 master 没有对应的上游分支。<br>为推送当前分支并建立与远程上游的跟踪，使用</p></blockquote><blockquote><p>  git push –set-upstream origin master</p></blockquote><blockquote><p>root@debian:/etc/wmf/Task_Summer# bash ../push.sh<br>位于分支 master<br>无文件要提交，干净的工作区<br>To gitee.com:wumengfei666/Task_Summer.git<br>! [rejected]        master -&gt; master (fetch first)<br>error: 无法推送一些引用到 <a href="mailto:&#39;git@gitee.com" target="_blank" rel="noopener">&#39;git@gitee.com</a>:wumengfei666/Task_Summer.git’<br>提示：更新被拒绝，因为远程仓库包含您本地尚不存在的提交。这通常是因为另外<br>提示：一个仓库已向该引用进行了推送。再次推送前，您可能需要先整合远程变更<br>提示：（如 ‘git pull …’）。<br>提示：详见 ‘git push –help’ 中的 ‘Note about fast-forwards’ 小节。</p></blockquote><p>则执行以下代码：<br>git pull –rebase origin master             //取回项目的master分支,并与本地的合并,若不合并push会失败<br>git push origin master                      //推送master分支到码云上，登录码云即可看见刚推送的项目了</p><p>10.如出现以下错误</p><blockquote><p>To gitee.com:wumengfei666/Task_Summer.git<br>! [rejected]        master -&gt; master (non-fast-forward)<br>error: 无法推送一些引用到 <a href="mailto:&#39;git@gitee.com" target="_blank" rel="noopener">&#39;git@gitee.com</a>:wumengfei666/Task_Summer.git’<br>提示：更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支。<br>提示：再次推送前，先与远程变更合并（如 ‘git pull …’）。详见<br>提示：’git push –help’ 中的 ‘Note about fast-forwards’ 小节。</p></blockquote><p>则执行以下命令：<br>git remote add origin <a href="https://gitee.com/wumegfei666/MyProject.git" target="_blank" rel="noopener">https://gitee.com/wumegfei666/MyProject.git</a><br>$git fetch origin<br>$git merge origin/master</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在linux上使用git上传文件到码云上&quot;&gt;&lt;a href=&quot;#在linux上使用git上传文件到码云上&quot; class=&quot;headerlink&quot; title=&quot;在linux上使用git上传文件到码云上&quot;&gt;&lt;/a&gt;在linux上使用git上传文件到码云上&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基本mariadb的增删改查</title>
    <link href="http://yoursite.com/2018/11/01/%E5%9F%BA%E6%9C%ACmariadb%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
    <id>http://yoursite.com/2018/11/01/基本mariadb的增删改查/</id>
    <published>2018-11-01T09:23:58.000Z</published>
    <updated>2018-11-01T09:28:48.948Z</updated>
    
    <content type="html"><![CDATA[<p>1、创建一个数据库   create database wumengfei;</p><p>2、使用数据库   use wumengfei;</p><p>3、查看数据库   show databases;</p><p>4、创建一个表格   MariaDB [wumengfei]&gt; create table ww(<br>    -&gt; name varchar(10),<br>    -&gt; sex varchar(3));<br>Query OK, 0 rows affected (0.15 sec)</p><p>5、在表格中添加元素   insert into www value(“a”,”A”);</p><p>6、查看表格元素   select * from www;</p><p>7、删除表格元素   delete from www where name=”a”;</p><p>8、更改表格元素   update www set name=”b” where sex=”nan”;</p><p>9、根据表格的一个属性（后面的）来查找另一个属性（前面的）<br>    select sex from www where name=”y”;</p><p>10、删除表格   drop database wumengfei;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、创建一个数据库   create database wumengfei;&lt;/p&gt;
&lt;p&gt;2、使用数据库   use wumengfei;&lt;/p&gt;
&lt;p&gt;3、查看数据库   show databases;&lt;/p&gt;
&lt;p&gt;4、创建一个表格   MariaDB [wumeng
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/11/01/hello-world/"/>
    <id>http://yoursite.com/2018/11/01/hello-world/</id>
    <published>2018-11-01T08:04:57.164Z</published>
    <updated>2018-11-01T08:04:57.164Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
